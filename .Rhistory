df_clean <- df_clean %>%
mutate(EFF = PTS + TRB + AST + STL + BLK - (FGA-FG) - (FTA-FT) -TOV / G)
df_clean
df_clean <- df_clean %>%
mutate(eFGp = (X2P + (1.5*X3P))/ FGA)
df_clean <- df_clean %>%
mutate(Creds = (PTS)+(TRB)+(AST)+(STL)+(BLK)-(FGA - FG) - (FTA - FT) - (TOV))
df_clean <- df_clean %>%
mutate(ApproxV = (Creds^(3/4))/21)
df_clean <- df_clean %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
View(df_clean)
str(Trv)
str(ApproxV)
str(df_clean$ApproxV)
df_clean <- df_clean %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13, .name_repair = "unique")
df_clean <- df_clean %>%
group_by(player_id, player_name, Age) %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
df_clean <- df_clean %>%
relocate(player_id, .after = player_name)
df_clean <- df_clean %>%
group_by(player_id, player_name, Age) %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
df_clean <- df_clean %>%
group_by(player_id, player_name, Age) %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
ungroup(df_clean)
df_clean %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
df_clean <- df_clean %>%
mutate(value_trade = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
View(df_TOT_players)
df_clean[is.na(df_clean)] = 0
df_clean <- df_clean %>%
mutate(TrV = ((df_clean$ApproxV - 27 - 0.75 * df_clean$Age)^2*(27 - 0.75 * df_clean$Age + 1) * df_clean$ApproxV) / 190 + (df_clean$ApproxV) * 2 /13)
View(df_TOT_players)
library(tidyverse)
library(ggplot2)
library(readr)
library(dplyr)
library(broom)
library(performance)
library(psych)
library(ggrepel)
View(df_team_Stats1)
View(df_team_Stats2)
View(df_joined)
View(df_team_Stats1)
View(df_TOT_players)
View(df_clean)
View(df_team_Stats2)
View(df_team_Stats1)
View(df_ind_stats_no_doubles)
View(df_ind_stats_no_doubles)
View(df_TOT_players)
View(df_team_Stats1)
write_csv(df_TOT_players, file = "data/tidy_data/df_TOT_players.csv")
write_csv(df_team_Stats2, file = "data/tidy_data/df_team_Stats2.csv")
write_csv(df_team_Stats1, file = "data/tidy_data/df_team_Stats1.csv")
View(df_TOT_players)
## Reading in data
## player_stats_tidy
player_stats_tidy <- read_csv("data/tidy_data/player_stats_tidy.csv")
View(player_stats_tidy)
## Df_team_Stats1
df_Stats1_Tm_W <- read_csv("data/tidy_data/df_team_Stats1.csv")
## 18-19 Stats 1
df_Stats2_Tm_W <- read_csv("data/tidy_data/df_team_Stats2.csv")
## df_TOT_players
df_TOT_players_Tm_W <- read_csv("data/tidy_data/df_TOT_players.csv")
View(df_Stats1_Tm_W)
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Milwaukee Bucks", "Team"] <- "MIL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Golden State Warriors", "Team"] <- "GSW"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Philadelphia 76ers", "Team"] <- "PHI"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Los Angeles Clippers", "Team"] <- "LAC"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Portland Trail Blazers", "Team"] <-"POR"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Oklahoma City Thunder", "Team"] <- "OKC"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Toronto Raptors", "Team"] <-"TOR"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Sacramento Kings", "Team"] <- "SAC"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Washington Wizards", "Team"] <- "WAS"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Houston Rockets", "Team"] <- "HOU"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Atlanta Hawks", "Team"] <- "ATL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Minnesota Timberwolves", "Team"] <-"MIN"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Boston Celtics", "Team"] <- "BOS"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Brooklyn Nets", "Team"] <- "BRK"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Los Angeles Lakers", "Team"] <- "LAL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Utah Jazz", "Team"] <- "UTA"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "San Antonio Spurs", "Team"] <- "SAS"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Charlotte Hornets", "Team"] <- "CHO"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Denver Nuggets", "Team"] <- "DEN"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Dallas Mavericks", "Team"] <- "DAL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Indiana Pacers", "Team"] <-  "IND"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Phoenix Suns", "Team"] <- "PHO"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Orlando Magic", "Team"] <- "ORL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Detroit Pistons", "Team"] <- "DET"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Miami Heat", "Team"] <- "MIA"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Chicago Bulls", "Team"] <- "CHI"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "New York Knicks", "Team"] <- "NYK"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Cleveland Cavaliers", "Team"] <- "CLE"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Memphis Grizzlies", "Team"] <- "MEM"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "New Orleans Pelicans", "Team"] <- "NOP"
view(df_Stats1_Tm_W)
names(df_Stats1_Tm_W)[2] <- "Tm"
df_new_TOT_joined <- full_join(x = df_TOT_players_Tm_W, y = player_stats_tidy,
by = c("player_name", "Age"))
view(df_new_TOT_joined)
View(player_stats_tidy)
player_stats_tidy <- player_stats_tidy %>%
mutate(TOT = "")
View(player_stats_tidy)
player_stats_tidy <- player_stats_tidy %>%
relocate(TOT, .after = Tm)
View(player_stats_tidy)
duplicated(df_new_TOT_joined$player_name)
which(duplicated(df_new_TOT_joined$player_name), arr.ind = TRUE)
player_stats_tidy <- replace_na(player_stats_tidy, list(Tm.x = "nonTOT"))
sum(is.na(player_stats_tidy))
view(df_new_TOT_joined)
sum(is.na(df_new_TOT_joined))
df_new_TOT_joined <- replace_na(df_new_TOT_joined, list(Tm.x = "nonTOT"))
sum(is.na(df_new_TOT_joined))
View(df_new_TOT_joined)
df_new_TOT_joined[is.na(df_new_TOT_joined)] = "nonTOT"
view(df_new_TOT_joined)
df_new_TOT_joined <- replace_na(df_new_TOT_joined, list(Tm.x = "nonTOT",
Tm_MP.x = "nonTOT",
Tm_FGA.x = "nonTOT",
Tm_FTA.x = "nonTOT"))
view(df_new_TOT_joined)
df_new_TOT_joined<- df_new_TOT_joined[!(df_new_TOT_joined$Tm.x == "TOT"),]
View(df_new_TOT_joined)
df_new_TOT_joined <- df_new_TOT_joined %>%  # or add in whatever your data objects are that you want to round, and what you want to save to
mutate(across(c(4,5,7,8:32), ~replace_na(.x,)))
sum(is.na(df_new_TOT_joined))
df_new_TOT_joined <- df_new_TOT_joined %>%  # or add in whatever your data objects are that you want to round, and what you want to save to
mutate(across(c(4,5,7,8:32), ~replace_na(.x, "nonTOT")))
sum(is.na(df_new_TOT_joined))
df_new_TOT_joined <- df_new_TOT_joined %>%  # or add in whatever your data objects are that you want to round, and what you want to save to
mutate(across(c(1,7,8:35), ~replace_na(.x, "nonTOT")))
sum(is.na(df_new_TOT_joined))
df_new_TOT_joined <- df_new_TOT_joined %>%  # or add in whatever your data objects are that you want to round, and what you want to save to
mutate(across(c(1:7,8:35), ~replace_na(.x, "nonTOT")))
sum(is.na(df_new_TOT_joined))
df_new_TOT_joined<- df_new_TOT_joined[!(df_new_TOT_joined$Tm.x == "nonTOT"),]
sum(is.na(df_new_TOT_joined))
view(df_new_TOT_joined)
View(df_new_TOT_joined)
library(tidyverse)
library(ggplot2)
library(readr)
library(dplyr)
library(broom)
library(performance)
library(psych)
library(ggrepel)
## Reading in data
## player_stats_tidy
player_stats_tidy <- read_csv("data/tidy_data/player_stats_tidy.csv")
View(player_stats_tidy)
## Df_team_Stats1
df_Stats1_Tm_W <- read_csv("data/tidy_data/df_team_Stats1.csv")
## 18-19 Stats 1
df_Stats2_Tm_W <- read_csv("data/tidy_data/df_team_Stats2.csv")
## df_TOT_players
df_TOT_players_Tm_W <- read_csv("data/tidy_data/df_TOT_players.csv")
## rename team stats with T_var in Stats2
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Milwaukee Bucks", "Team"] <- "MIL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Golden State Warriors", "Team"] <- "GSW"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Philadelphia 76ers", "Team"] <- "PHI"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Los Angeles Clippers", "Team"] <- "LAC"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Portland Trail Blazers", "Team"] <-"POR"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Oklahoma City Thunder", "Team"] <- "OKC"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Toronto Raptors", "Team"] <-"TOR"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Sacramento Kings", "Team"] <- "SAC"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Washington Wizards", "Team"] <- "WAS"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Houston Rockets", "Team"] <- "HOU"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Atlanta Hawks", "Team"] <- "ATL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Minnesota Timberwolves", "Team"] <-"MIN"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Boston Celtics", "Team"] <- "BOS"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Brooklyn Nets", "Team"] <- "BRK"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Los Angeles Lakers", "Team"] <- "LAL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Utah Jazz", "Team"] <- "UTA"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "San Antonio Spurs", "Team"] <- "SAS"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Charlotte Hornets", "Team"] <- "CHO"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Denver Nuggets", "Team"] <- "DEN"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Dallas Mavericks", "Team"] <- "DAL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Indiana Pacers", "Team"] <-  "IND"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Phoenix Suns", "Team"] <- "PHO"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Orlando Magic", "Team"] <- "ORL"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Detroit Pistons", "Team"] <- "DET"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Miami Heat", "Team"] <- "MIA"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Chicago Bulls", "Team"] <- "CHI"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "New York Knicks", "Team"] <- "NYK"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Cleveland Cavaliers", "Team"] <- "CLE"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "Memphis Grizzlies", "Team"] <- "MEM"
df_Stats1_Tm_W[df_Stats1_Tm_W$Team == "New Orleans Pelicans", "Team"] <- "NOP"
view(df_Stats1_Tm_W)
##Create right join for further joining below
##Create right join from Stats_1 W and L,
##Right join Stats1 W, L, and create W and Tm_L
## Change team variable name
names(df_Stats1_Tm_W)[2] <- "Tm"
df_new_TOT_joined <- full_join(x = df_TOT_players_Tm_W, y = player_stats_tidy,
by = c("player_name", "Age"))
view(df_new_TOT_joined)
df_new_TOT_joined <- df_new_TOT_joined %>%  # or add in whatever your data objects are that you want to round, and what you want to save to
mutate(across(c(1:7,8:35), ~replace_na(.x, "nonTOT")))
df_new_TOT_joined<- df_new_TOT_joined[!(df_new_TOT_joined$Tm.x == "TOT"),]
view(df_new_TOT_joined)
df_new_TOT_joined<- df_new_TOT_joined %>%
select(-c(1:7,8:35))
view(df_new_TOT_joined)
player_stats_tidy <- player_stats_tidy %>%
mutate(TOT = case_when(Tm == "MIL" ~ "nonTOT",
Tm == "ATL" ~ "nonTOT",
Tm == "BRK" ~ "nonTOT",
Tm == "BOS" ~ "nonTOT",
Tm == "CHO" ~ "nonTOT",
Tm == "CHI" ~ "nonTOT",
Tm =="MIN" ~ "nonTOT",
Tm == "DEN" ~ "nonTOT",
Tm == "CLE" ~ "nonTOT",
Tm =="DAL" ~ "nonTOT",
Tm == "GSW" ~ "nonTOT",
Tm == "DET" ~ "nonTOT",
Tm =="HOU" ~ "nonTOT",
Tm == "IND" ~ "nonTOT",
Tm == "LAC" ~ "nonTOT",
Tm =="LAL" ~ "nonTOT",
Tm == "MEM" ~ "nonTOT",
Tm == "MIA" ~ "nonTOT",
Tm =="NOP" ~ "nonTOT",
Tm == "NYK" ~ "nonTOT",
Tm == "OKC" ~ "nonTOT",
Tm == "ORL" ~ "nonTOT",
Tm == "PHI" ~ "nonTOT",
Tm == "PHX" ~ "nonTOT",
Tm == "PHO" ~ "nonTOT",
Tm == "POR" ~ "nonTOT",
Tm == "SAC" ~ "nonTOT",
Tm == "SAS" ~ "nonTOT",
Tm == "TOR" ~ "nonTOT",
Tm == "UTA" ~ "nonTOT",
Tm == "WAS" ~ "nonTOT"))
View(player_stats_tidy)
player_stats_tidy <- player_stats_tidy %>%
mutate(TOT = case_when(Tm == "MIL" ~ "nonTOT",
Tm == "ATL" ~ "nonTOT",
Tm == "BRK" ~ "nonTOT",
Tm == "BOS" ~ "nonTOT",
Tm == "CHO" ~ "nonTOT",
Tm == "CHI" ~ "nonTOT",
Tm =="MIN" ~ "nonTOT",
Tm == "DEN" ~ "nonTOT",
Tm == "CLE" ~ "nonTOT",
Tm =="DAL" ~ "nonTOT",
Tm == "GSW" ~ "nonTOT",
Tm == "DET" ~ "nonTOT",
Tm =="HOU" ~ "nonTOT",
Tm == "IND" ~ "nonTOT",
Tm == "LAC" ~ "nonTOT",
Tm =="LAL" ~ "nonTOT",
Tm == "MEM" ~ "nonTOT",
Tm == "MIA" ~ "nonTOT",
Tm =="NOP" ~ "nonTOT",
Tm == "NYK" ~ "nonTOT",
Tm == "OKC" ~ "nonTOT",
Tm == "ORL" ~ "nonTOT",
Tm == "PHI" ~ "nonTOT",
Tm == "PHX" ~ "nonTOT",
Tm == "PHO" ~ "nonTOT",
Tm == "POR" ~ "nonTOT",
Tm == "SAC" ~ "nonTOT",
Tm == "SAS" ~ "nonTOT",
Tm == "TOR" ~ "nonTOT",
Tm == "UTA" ~ "nonTOT",
Tm == "WAS" ~ "nonTOT",
Tm == NA ~ "TOT"))
player_stats_tidy <- player_stats_tidy %>%
mutate(TOT = case_when(Tm == "MIL" ~ "nonTOT",
Tm == "ATL" ~ "nonTOT",
Tm == "BRK" ~ "nonTOT",
Tm == "BOS" ~ "nonTOT",
Tm == "CHO" ~ "nonTOT",
Tm == "CHI" ~ "nonTOT",
Tm =="MIN" ~ "nonTOT",
Tm == "DEN" ~ "nonTOT",
Tm == "CLE" ~ "nonTOT",
Tm =="DAL" ~ "nonTOT",
Tm == "GSW" ~ "nonTOT",
Tm == "DET" ~ "nonTOT",
Tm =="HOU" ~ "nonTOT",
Tm == "IND" ~ "nonTOT",
Tm == "LAC" ~ "nonTOT",
Tm =="LAL" ~ "nonTOT",
Tm == "MEM" ~ "nonTOT",
Tm == "MIA" ~ "nonTOT",
Tm =="NOP" ~ "nonTOT",
Tm == "NYK" ~ "nonTOT",
Tm == "OKC" ~ "nonTOT",
Tm == "ORL" ~ "nonTOT",
Tm == "PHI" ~ "nonTOT",
Tm == "PHX" ~ "nonTOT",
Tm == "PHO" ~ "nonTOT",
Tm == "POR" ~ "nonTOT",
Tm == "SAC" ~ "nonTOT",
Tm == "SAS" ~ "nonTOT",
Tm == "TOR" ~ "nonTOT",
Tm == "UTA" ~ "nonTOT",
Tm == "WAS" ~ "nonTOT"))
player_stats_tidy <- replace_na(player_stats_tidy, list(TOT = "TOT"))
View(player_stats_tidy)
df_new_TOT_joined<- player_stats_tidy[!(player_stats_tidy$TOT == "TOT"),]
sum(is.na(df_new_TOT_joined)
sum(is.na(df_new_TOT_joined))
view(df_new_TOT_joined)
View(df_Stats1_Tm_W)
df_new_TOT_joined <- df_Stats1_Tm_W %>%
select(Tm, W, L) %>%
right_join(df_new_TOT_joined, by="Tm", y = TRUE)
df_new_TOT_joined <- df_Stats1_Tm_W %>%
select(Tm, W, L) %>%
right_join(df_new_TOT_joined, by="Tm", x = TRUE)
df_new_TOT_joined <- df_Stats1_Tm_W %>%
select(Tm, W, L) %>%
right_join(df_new_TOT_joined, by="Tm")
View(df_new_TOT_joined)
sum(is.na(df_new_TOT_joined))
write_csv(df_new_TOT_joined, file = "data/tidy_data/df_nonTOT_clean.csv")
View(df_TOT_players)
View(df_TOT_players)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics(rep("figs/CodeCogsEqn.gif"))
knitr::include_graphics(rep("figs/CodeCogsEqn.gif"))
library(tidyverse)
library(ggplot2)
library(readr)
library(dplyr)
library(broom)
library(performance)
library(psych)
library(ggrepel)
df_nonTOT_clean <- read_csv("data/tidy_data/df_nonTOT_clean.csv")
view(df_nonToT_clean)
view(df_nonTOT_clean)
df_nonTOT_clean %>%
ggplot(dat, aes(x = eFGp, y = W)) +
geom_point(alhpa = 0.5, colour = "purple") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = eFGp, y = W)) +
geom_point(alhpa = 0.5, colour = "purple") +
geom_smooth(method = "lm")
## PTS_per_MP vs W
ggplot(df_nonTOT_clean, aes(x = PTS_per_MP, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = PTS_per_MP, y = eFGp)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = PTS_per_MP, y = TrV)) +
geom_point(alhpa = 0.5, colour = "dodgerblue") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = EFF, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
### Tm_use_total vs W
ggplot(df_nonTOT_clean, aes(x = Tm_use_total, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
## PTS_per_game vs W
ggplot(df_nonTOT_clean, aes(x = PTS_per_game, y = W)) +
geom_point(alhpa = 0.5, colour = "green") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = STL_MP, y = W)) +
geom_point(alhpa = 0.5, colour = "red") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = TOV_MP, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Age, y = EFF)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Age, y = eFGp)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Age, y = Tm_use_total)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
df_nonTOT_clean$Pos <- as.factor(df_nonTOT_clean$Pos)
str(df_nonTOT_clean$Pos)
## create new df "datC" and create variables/game
datC <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos, "C")
summary(Pos)
summary(df_nonTOT_clean$Pos)
head(df_nonTOT_clean, 20)
table(df_nonTOT_clean$Pos)
levels(df_nonTOT_clean$Pos)
datC <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos, C)
df_nonTOT_clean <- read_csv("data/tidy_data/df_nonTOT_clean.csv")
view(df_nonTOT_clean)
datC <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos, "C")
datC <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "C")
df_nonTOT_clean$Pos <- as.factor(df_nonTOT_clean$Pos)
str(df_nonTOT_clean$Pos)
datPF <- Teams %>% filter(df_nonTOT_clean$Pos == "PF")
datPF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "PF")
datPF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "PG")
datPF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "SF")
datPF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "SG")
View(datC)
View(df_nonTOT_clean)
df_nonTOT_clean <- read_csv("data/tidy_data/df_nonTOT_clean.csv")
view(df_nonTOT_clean)
## create new df "datC" and create variables/game
datC <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "C")
## create new df "datPF"
datPF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "PF")
## create new df "datPG"
datPG <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "PG")
## create new df "datSF"
datSF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "SF")
## create new df "datSG"
datSG <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "SG")
df_nonTOT_clean$Pos <- as.factor(df_nonTOT_clean$Pos)
str(df_nonTOT_clean$Pos)
write_csv(datC, file = "data/tidy_data/datC.csv")
write_csv(datPF, file = "data/tidy_data/datPF.csv")
write_csv(datPG, file = "data/tidy_data/datPG.csv")
write_csv(datSF, file = "data/tidy_data/datSF.csv")
write_csv(datSG, file = "data/tidy_data/datSG.csv")
View(df_nonTOT_clean)
ggplot(data = df_nonTOT_clean, aes(x = Pos, y = PTS_per_MP)) +
geom_boxplot(aes(fill = Pos)) +
scale_fill_discrete(name = "Pos", labels = c("1 = C", "2 = PF", "3 = PG","4 = SF", "5 = SG"))
df_nonTOT_clean <- df_nonTOT_clean %>%
relocate(PTS_per_MP, .after = eFGp)
df_nonTOT_clean <- df_nonTOT_clean %>%
relocate(PTS_per_game, .after = PTS_per_MP)
View(df_nonTOT_clean)
##Read in data
df_nonTOT_clean <- read_csv("data/tidy_data/df_nonTOT_clean.csv")
view(df_nonTOT_clean)
## relocate PTS_per_MP and PTS_per_game
df_nonTOT_clean <- df_nonTOT_clean %>%
relocate(PTS_per_MP, .after = eFGp)
df_nonTOT_clean <- df_nonTOT_clean %>%
relocate(PTS_per_game, .after = PTS_per_MP)
## create new df "datC" and create variables/game
datC <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "C")
## create new df "datPF"
datPF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "PF")
## create new df "datPG"
datPG <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "PG")
## create new df "datSF"
datSF <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "SF")
## create new df "datSG"
datSG <- df_nonTOT_clean %>% filter(df_nonTOT_clean$Pos == "SG")
View(datSG)
write_csv(datC, file = "data/tidy_data/datC.csv")
write_csv(datPF, file = "data/tidy_data/datPF.csv")
write_csv(datPG, file = "data/tidy_data/datPG.csv")
write_csv(datSF, file = "data/tidy_data/datSF.csv")
write_csv(datSG, file = "data/tidy_data/datSG.csv")
df_nonTOT_clean <- df_nonTOT_clean %>%
filter(df_nonTOT_clean$G >= 10)
## Change Pos to factor (C = 1, PF = 2, PG = 3, SF = 4, SG = 5)
df_nonTOT_clean$Pos <- as.factor(df_nonTOT_clean$Pos)
str(df_nonTOT_clean$Pos)
ggplot(df_nonTOT_clean, aes(x = eFGp, y = W)) +
geom_point(alhpa = 0.5, colour = "purple") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = PTS_per_MP, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = PTS_per_MP, y = eFGp)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = PTS_per_MP, y = TrV)) +
geom_point(alhpa = 0.5, colour = "dodgerblue") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = EFF, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Tm_use_total, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = PTS_per_game, y = W)) +
geom_point(alhpa = 0.5, colour = "green") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = STL_MP, y = W)) +
geom_point(alhpa = 0.5, colour = "red") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = TOV_MP, y = W)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Age, y = EFF)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Age, y = eFGp)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(df_nonTOT_clean, aes(x = Age, y = Tm_use_total)) +
geom_point(alhpa = 0.5, colour = "magenta") +
geom_smooth(method = "lm")
ggplot(data = df_nonTOT_clean, aes(x = Pos, y = PTS_per_MP)) +
geom_boxplot(aes(fill = Pos)) +
scale_fill_discrete(name = "Pos", labels = c("1 = C", "2 = PF", "3 = PG","4 = SF", "5 = SG"))
ggplot(df_nonTOT_clean, aes(x = STL_MP, y = W)) +
geom_point(alhpa = 0.5, fill = Pos) +
geom_smooth(method = "lm")
